#include <bits/stdc++.h>
using namespace std;

const int MAXN = 56;

class BigO {
public :
  BigO () {
#ifdef Atrin
#endif
    
  }

  int minK(vector<string> gg) {
    int N = gg.size();
    for(int i = 0;i<gg.size();i++) {
      for(int I = 0;I<gg[0].size();I++)
	if(gg[i][I]=='Y')
	  g[i].push_back(I) ;
    }
    for(int i = 0;i<N;i++)
      if(!mark[i])
	create_topo(i);
    reverse(topo.begin(),topo.end());
    int I = 0;
    vector<int>scc_topo;
    for(auto w : topo)
      if(mark[w])
	create_scc(w,I++),scc_topo.insert(scc_topo.begin(),I);
    for(auto w : topo)
      if(!mark[w])
	if(!check(w)) return -1;
    reverse(topo.begin(),topo.end());
    for(auto w : topo)
      for(auto gw : g[w])
	if(scc[w] != scc[gw])
	  dis[scc[w]] = 1+dis[scc[gw]];
    int ans = 0;
    for(auto w : scc_topo)
      ans = max(ans,dis[w]);
    return ans;
  }
private :
  vector<int> g[MAXN];
  vector<int> topo;
  int scc[MAXN];
  int dis[MAXN];
  bool mark[MAXN];
};

#ifdef Atrin
int main() {
  int n;cin >> n;
  vector<string> vv;
  for(int i = 0;i<n;i++) {
    string str;cin >> str;
    vv.push_back(str);
  }
  BigO *ww = new BigO();
  int ans = ww->minK(vv);
  cout << ans << endl;
  return 0;
}
#endif
