#include <iostream>
#include <stdio.h>
#include <queue>
#include <string>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <stdlib.h>
#include <math.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;
using namespace std;

#define int long long
#define rep(i,f,l) for(int i=f;i<l;++i)
#define FOR(i,n) for(int i=1;i<=n;++i)
#define sim template < class c
#define ris return * this
#define imie(...) " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] "
#define Foreach(i, x) for (__typeof(x.begin()) i = x.begin(); i != x.end(); i++)
#define pb push_back
#define SI size()
#define S second
#define F first
#define C clear()

const int MAXn=50;
const int inf=1000000000;

int a[MAXn][MAXn],b[MAXn][MAXn],k,n,m,f,d,e,dis[1000][1000],ff[5];
char c;
vector<int> v;
bool b1,b2,b3;

signed main(){
	ios::sync_with_stdio(false);
 	cin.tie(NULL);
	cin>>n>>m;
	FOR(i,n){
		FOR(j,m){
			cin>>c;
			a[i][j]=c=='X'?1:0;
		}
	}
	FOR(i,n){
		FOR(j,m){
			if(a[i][j]==1){
				 if(b[i][j-1]==0&&b[i-1][j]==0&&b[i+1][j]==0&&b[i][j+1]==0)b[i][j]=k+1,k++;
				 if(b[i][j-1]>0)b[i][j]=b[i][j-1];                                                                                                    
				 if(b[i-1][j]>0)b[i][j]=b[i-1][j];                                                                                                    
				 if(b[i][j+1]>0)b[i][j]=b[i][j+1];                                                                                                    
				 if(b[i+1][j]>0)b[i][j]=b[i+1][j];                                                                                                    
			}
		}
	}
	FOR(i,n){
		FOR(j,m){
			if(b[i][j]!=b[i-1][j])b[i-1][j]=b[i][j];
			if(b[i][j]!=b[i-1][j])b[i][j-1]=b[i][j];
		}
	}
	for(int i=n;i>=0;--i){
		for(int j=m;j>=0;--j){
			if(b[i][j]!=b[i-1][j]&&b[i][j]!=0&b[i-1][j]!=0)b[i-1][j]=b[i][j];
			if(b[i][j]!=b[i][j-1]&&b[i][j]!=0&&b[i][j-1]!=0)b[i][j-1]=b[i][j];
		}
	}
	FOR(i,n){
		FOR(j,m){
			if(b[i][j]>0&&f==0&&b1==0){
				f=b[i][j];
				b1=1;
			}
			else if(f>0&&b[i][j]!=f&&b[i][j]>0&&b2==0){
				d=b[i][j];
				b2=1;
			}
			else if(d>0&&f>0&&b[i][j]!=d&&b[i][j]!=f&&b[i][j]>0&&b3==0)e=b[i][j],b3=1;
		}
	}
//	cout<<f<<" "<<d<<" "<<e<<endl;
	FOR(i,1000)FOR(j,1000)dis[i][j]=inf;
		
	FOR(i,n){
		FOR(j,m){
			FOR(p,n){
				FOR(q,m){
					if(i!=p||j!=q){
						if(b[i][j]>0&&b[p][q]>0){
							dis[b[i][j]][b[p][q]]=min(dis[b[i][j]][b[p][q]],abs(i-p)+abs(j-q)-1);
							dis[b[p][q]][b[i][j]]=min(dis[b[p][q]][b[i][j]],abs(i-p)+abs(j-q)-1);
						}
					}
				}
			}
		}
	}
	ff[0]=dis[f][d];
	ff[1]=dis[d][e];
	ff[2]=dis[e][f];
	sort(ff,ff+3);
	return cout<<ff[0]+ff[1]<<endl,0;
}